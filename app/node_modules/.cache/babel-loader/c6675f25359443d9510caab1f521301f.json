{"ast":null,"code":"import*as d3 from'd3';import cx from'classnames';import moment from'moment';import _ from'lodash';import{convertPercentChange,buildXTicks}from'./line-graph.transform';var GraphLineColors=['lineZero','lineOne','lineTwo','lineThree','lineFour','lineFive'];// Graph Dimensions\nvar totalWidth=900;var totalHeight=440;var margin={top:20,right:20,bottom:60,left:40};var graphWidth=totalWidth-margin.left-margin.right;var graphHeight=totalHeight-margin.top-margin.bottom;var yTicksCount=6;var prevPercentChange=0;/* istanbul ignore next */var drawModeledPerformanceGraph=function drawModeledPerformanceGraph(rawChartData,startDate,endDate,showChipValue,setPercentChangeData){// when redrawing the graph with new data, this removes the old graph\nd3.select('#isa-modeled-performance-chart > *').remove();// set chart data\nvar chartData=rawChartData.map(function(comparator){return convertPercentChange(comparator);});console.log(chartData);///////////////////////////////////////////////////\n//////////////// Set the Scales ///////////////////\n///////////////////////////////////////////////////\nvar xScale=d3.scaleTime().domain(d3.extent(chartData[0].values,function(d){return moment(d.date).valueOf();})).range([0,graphWidth]);var yScale=d3.scaleLinear().domain([// set min\nd3.min(chartData,function(d){return d3.min(d.values,function(v){return v.percentChange;});}),// set max\nd3.max(chartData,function(d){return d3.max(d.values,function(v){return v.percentChange;});})]).range([graphHeight,0]);// Initiate the line function\nvar lineFunction=d3.line().x(function(d){return xScale(moment(d.date).valueOf());}).y(function(d){return yScale(d.percentChange);}).curve(d3.curveLinear);// Initiate the area line function\nvar areaFunction=d3.area().x(function(d){return xScale(moment(d.date).valueOf());}).y0(graphHeight).y1(function(d){return yScale(d.percentChange);}).curve(d3.curveLinear);///////////////////////////////////////////////////\n////////////// Initialize the SVG /////////////////\n///////////////////////////////////////////////////\n// Add the svg canvas for the line chart\nvar svg=d3.select('#isa-modeled-performance-chart').attr('width',totalWidth).attr('height',totalHeight).append('g').attr('transform','translate('+margin.left+','+margin.top+')');// chart background\nsvg.append('rect').attr('width',graphWidth).attr('height',graphHeight).attr('fill','#fff');///////////////////////////////////////////////////\n///////////// Create the gradient /////////////////\n///////////////////////////////////////////////////\n// Define the gradient below the line chart\nvar areaGradient=svg.append('defs').append('linearGradient').attr('id','areaGradient').attr('x1','0%').attr('y1','0%').attr('x2','0%').attr('y2','100%');// Append the first stop - the color at the top\nareaGradient.append('stop').attr('offset','0%').attr('stop-color','#A3A3A4').attr('stop-opacity',0.6);// Append the second stop - white transparant almost at the end\nareaGradient.append('stop').attr('offset','80%').attr('stop-color','white').attr('stop-opacity',0);///////////////////////////////////////////////////\n/////////////// Create the chart //////////////////\n///////////////////////////////////////////////////\n// xaxis tick values\nvar xAxisData=buildXTicks(moment.utc(startDate),moment.utc(endDate));// Generate and render the X Axis\nsvg.append('g').attr('class','x-axis axis').attr('transform','translate(0,'+graphHeight+')').call(d3.axisBottom(xScale).tickValues(xAxisData.xTicks).tickFormat(d3.utcFormat(xAxisData.xTickFormat)));// Generate and render the Y Axis\nsvg.append('g').attr('class','y-axis axis').call(d3.axisLeft(yScale).ticks(yTicksCount).tickFormat(function(d){return d+'%';}));// Graphline generators\nvar makeXGridlines=function makeXGridlines(){return d3.axisBottom(xScale).tickValues(xAxisData.xTicks);};var makeYGridlines=function makeYGridlines(){return d3.axisLeft(yScale).ticks(yTicksCount);};svg.append('g').attr('class','x-grid xGridLines').attr('transform','translate(0, '+graphHeight+')').call(makeXGridlines().tickSize(-graphHeight).tickFormat(''));svg.append('g').attr('class','y-grid yGridLines').call(makeYGridlines().tickSize(-graphWidth).tickFormat(''));///////////////////////////////////////////////////\n///////////  Render the comparators ///////////////\n///////////////////////////////////////////////////\n// Render the gradient area\nsvg.append('g').attr('class','gradient-area-container').append('path').attr('class','area gradientArea').style('fill','url(#areaGradient)').attr('d',areaFunction(chartData[0].values));// Render the comparator lines\nvar graphLines=svg.append('g').attr('class','graph-lines-container');chartData.forEach(function(dataSet,index){var styleClass=cx('graphLine',GraphLineColors[index]);return graphLines.append('path').attr('class',styleClass).attr('d',lineFunction(dataSet.values));});///////////////////////////////////////////////////\n//////////////  Mouseover Effects  ////////////////\n///////////////////////////////////////////////////\n// Vertical line\nsvg.append('g').attr('class','mouseLineContainer').append('line').attr('class',\"mouse-line\").style('stroke','#a3a3a4').style('stroke-width','1px').style('opacity','0').style('stroke-dasharray','5').attr('y1',0).attr('y2',graphHeight);// Render invisible scatter plot per comparator (for mouseover effect)\nvar scatterPlot=svg.append('g').attr('class','scatter-plot-container');chartData.forEach(function(dataSet,index){return scatterPlot.append('g').attr('class','scatter-plot').selectAll('.dot').data(dataSet.values).enter().append('circle').attr('r',4).attr('cx',function(d){return xScale(moment(d.date).valueOf());}).attr('cy',function(d){return yScale(d.percentChange);}).attr('class',function(d){var pointIndex=_.findIndex(dataSet.values,d);return\"scatter-point point-\".concat(pointIndex,\" \").concat(GraphLineColors[index]);}).attr('data-dateId',function(d){return d.date;}).style('stroke-width','1px').style('fill','#fff').style('opacity','0');});// Define Mouse in/out area\nvar mouseArea=svg.append('rect').attr('class','mouseAreaRect');// Define mouse event handlers\nvar tooltip=d3.select(\"#chart-tooltip\");var tooltipValue=d3.select(\"#chart-tooltip-value\");var mouseOver=function mouseOver(){d3.select(\".mouse-line\").style('opacity','1');tooltip.style('visibility','visible');showChipValue(true);};var mouseOut=function mouseOut(){d3.select(\".mouse-line\").style('opacity','0');d3.selectAll(\".scatter-point\").style('opacity','0');tooltip.style('visibility','hidden');showChipValue(false);};var mouseMove=function mouseMove(datapoint){var detectArea=d3.select('.mouseAreaRect').node();var d3Mouse=d3.mouse(detectArea);var bisect=d3.bisector(function(i){return i.date;}).left;var xDate=moment(xScale.invert(d3Mouse[0])).format('YYYY-MM-DD');var index=bisect(datapoint.values,xDate);var xDot=d3.select('.point-'+index).attr('cx');var dataPoint=chartData[0].values.find(function(value){return value.date===xDate;});if(dataPoint){// move vertical line\nd3.select(\".mouse-line\").attr('transform',\"translate(\".concat(xDot,\", 0)\"));// Hide previous/all scatter points, but show new applicable ones\nd3.selectAll(\".scatter-point\").style('opacity','0');d3.selectAll(\".scatter-point[data-dateId=\\\"\".concat(xDate,\"\\\"]\")).style('opacity','1');// Set tooltip date value, and position\nvar tooltipDate=moment(xDate).format('MMM DD, YYYY');tooltipValue.html(tooltipDate);var tooltipXPosition=d3Mouse[0]+55;var tooltipYPosition=d3Mouse[1]+55;tooltip.style('left',\"\".concat(tooltipXPosition,\"px\"));tooltip.style('top',\"\".concat(tooltipYPosition,\"px\"));// send percentChange values to display\nvar percentChangeData=chartData.map(function(comparator){var findValue=comparator.values.find(function(value){return value.date===xDate;});var percentChange=findValue?findValue.percentChange:null;return{percentChange:percentChange,id:comparator.id};});if(percentChangeData[0].percentChange!==prevPercentChange){prevPercentChange=percentChangeData[0].percentChange;setPercentChangeData(percentChangeData);}}};// Generate mouse area with event handlers\nmouseArea.data(chartData).attr('width',graphWidth).attr('height',graphHeight).attr('fill','none').attr('pointer-events','all').on('mouseover',function(){return mouseOver();}).on('mousemove',function(d){return mouseMove(d);}).on('mouseout',function(){return mouseOut();});};export default drawModeledPerformanceGraph;","map":{"version":3,"sources":["/Users/suavestefano/repos/linechart-and-slider/app/src/LineGraph/line-graph.generator.js"],"names":["d3","cx","moment","_","convertPercentChange","buildXTicks","GraphLineColors","totalWidth","totalHeight","margin","top","right","bottom","left","graphWidth","graphHeight","yTicksCount","prevPercentChange","drawModeledPerformanceGraph","rawChartData","startDate","endDate","showChipValue","setPercentChangeData","select","remove","chartData","map","comparator","console","log","xScale","scaleTime","domain","extent","values","d","date","valueOf","range","yScale","scaleLinear","min","v","percentChange","max","lineFunction","line","x","y","curve","curveLinear","areaFunction","area","y0","y1","svg","attr","append","areaGradient","xAxisData","utc","call","axisBottom","tickValues","xTicks","tickFormat","utcFormat","xTickFormat","axisLeft","ticks","makeXGridlines","makeYGridlines","tickSize","style","graphLines","forEach","dataSet","index","styleClass","scatterPlot","selectAll","data","enter","pointIndex","findIndex","mouseArea","tooltip","tooltipValue","mouseOver","mouseOut","mouseMove","datapoint","detectArea","node","d3Mouse","mouse","bisect","bisector","i","xDate","invert","format","xDot","dataPoint","find","value","tooltipDate","html","tooltipXPosition","tooltipYPosition","percentChangeData","findValue","id","on"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nimport cx from 'classnames';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport { convertPercentChange, buildXTicks } from './line-graph.transform';\n\nconst GraphLineColors = [\n  'lineZero',\n  'lineOne',\n  'lineTwo',\n  'lineThree',\n  'lineFour',\n  'lineFive'\n];\n\n// Graph Dimensions\nconst totalWidth = 900;\nconst totalHeight = 440;\nconst margin = { top: 20, right: 20, bottom: 60, left: 40 };\nconst graphWidth = totalWidth - margin.left - margin.right;\nconst graphHeight = totalHeight - margin.top - margin.bottom;\n\nconst yTicksCount = 6;\n\nlet prevPercentChange = 0;\n\n/* istanbul ignore next */\nconst drawModeledPerformanceGraph = (\n  rawChartData,\n  startDate,\n  endDate,\n  showChipValue,\n  setPercentChangeData\n) => {\n  // when redrawing the graph with new data, this removes the old graph\n  d3.select('#isa-modeled-performance-chart > *').remove();\n\n  // set chart data\n  const chartData = rawChartData.map(comparator => {\n    return convertPercentChange(comparator);\n  });\n  console.log(chartData);\n  ///////////////////////////////////////////////////\n  //////////////// Set the Scales ///////////////////\n  ///////////////////////////////////////////////////\n\n  const xScale = d3\n    .scaleTime()\n    .domain(\n      d3.extent(chartData[0].values, d => {\n        return moment(d.date).valueOf();\n      })\n    )\n    .range([0, graphWidth]);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([\n      // set min\n      d3.min(chartData, d => {\n        return d3.min(d.values, v => {\n          return v.percentChange;\n        });\n      }),\n      // set max\n      d3.max(chartData, d => {\n        return d3.max(d.values, v => {\n          return v.percentChange;\n        });\n      })\n    ])\n    .range([graphHeight, 0]);\n\n  // Initiate the line function\n  const lineFunction = d3\n    .line()\n    .x(d => {\n      return xScale(moment(d.date).valueOf());\n    })\n    .y(d => {\n      return yScale(d.percentChange);\n    })\n    .curve(d3.curveLinear);\n  // Initiate the area line function\n  const areaFunction = d3\n    .area()\n    .x(d => {\n      return xScale(moment(d.date).valueOf());\n    })\n    .y0(graphHeight)\n    .y1(d => {\n      return yScale(d.percentChange);\n    })\n    .curve(d3.curveLinear);\n  ///////////////////////////////////////////////////\n  ////////////// Initialize the SVG /////////////////\n  ///////////////////////////////////////////////////\n\n  // Add the svg canvas for the line chart\n  const svg = d3\n    .select('#isa-modeled-performance-chart')\n    .attr('width', totalWidth)\n    .attr('height', totalHeight)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n  // chart background\n  svg\n    .append('rect')\n    .attr('width', graphWidth)\n    .attr('height', graphHeight)\n    .attr('fill', '#fff');\n\n  ///////////////////////////////////////////////////\n  ///////////// Create the gradient /////////////////\n  ///////////////////////////////////////////////////\n\n  // Define the gradient below the line chart\n  const areaGradient = svg\n    .append('defs')\n    .append('linearGradient')\n    .attr('id', 'areaGradient')\n    .attr('x1', '0%')\n    .attr('y1', '0%')\n    .attr('x2', '0%')\n    .attr('y2', '100%');\n\n  // Append the first stop - the color at the top\n  areaGradient\n    .append('stop')\n    .attr('offset', '0%')\n    .attr('stop-color', '#A3A3A4')\n    .attr('stop-opacity', 0.6);\n  // Append the second stop - white transparant almost at the end\n  areaGradient\n    .append('stop')\n    .attr('offset', '80%')\n    .attr('stop-color', 'white')\n    .attr('stop-opacity', 0);\n\n  ///////////////////////////////////////////////////\n  /////////////// Create the chart //////////////////\n  ///////////////////////////////////////////////////\n\n  // xaxis tick values\n  const xAxisData = buildXTicks(moment.utc(startDate), moment.utc(endDate));\n  // Generate and render the X Axis\n  svg\n    .append('g')\n    .attr('class', 'x-axis axis')\n    .attr('transform', 'translate(0,' + graphHeight + ')')\n    .call(\n      d3\n        .axisBottom(xScale)\n        .tickValues(xAxisData.xTicks)\n        .tickFormat(d3.utcFormat(xAxisData.xTickFormat))\n    );\n  // Generate and render the Y Axis\n  svg\n    .append('g')\n    .attr('class', 'y-axis axis')\n    .call(\n      d3\n        .axisLeft(yScale)\n        .ticks(yTicksCount)\n        .tickFormat(d => d + '%')\n    );\n\n  // Graphline generators\n  const makeXGridlines = () => {\n    return d3.axisBottom(xScale).tickValues(xAxisData.xTicks);\n  };\n  const makeYGridlines = () => {\n    return d3.axisLeft(yScale).ticks(yTicksCount);\n  };\n  svg\n    .append('g')\n    .attr('class', 'x-grid xGridLines')\n    .attr('transform', 'translate(0, ' + graphHeight + ')')\n    .call(\n      makeXGridlines()\n        .tickSize(-graphHeight)\n        .tickFormat('')\n    );\n  svg\n    .append('g')\n    .attr('class', 'y-grid yGridLines')\n    .call(\n      makeYGridlines()\n        .tickSize(-graphWidth)\n        .tickFormat('')\n    );\n\n  ///////////////////////////////////////////////////\n  ///////////  Render the comparators ///////////////\n  ///////////////////////////////////////////////////\n\n  // Render the gradient area\n  svg\n    .append('g')\n    .attr('class', 'gradient-area-container')\n    .append('path')\n    .attr('class', 'area gradientArea')\n    .style('fill', 'url(#areaGradient)')\n    .attr('d', areaFunction(chartData[0].values));\n\n  // Render the comparator lines\n  const graphLines = svg.append('g').attr('class', 'graph-lines-container');\n  chartData.forEach((dataSet, index) => {\n    const styleClass = cx('graphLine', GraphLineColors[index]);\n    return graphLines\n      .append('path')\n      .attr('class', styleClass)\n      .attr('d', lineFunction(dataSet.values));\n  });\n\n  ///////////////////////////////////////////////////\n  //////////////  Mouseover Effects  ////////////////\n  ///////////////////////////////////////////////////\n\n  // Vertical line\n  svg\n    .append('g')\n    .attr('class', 'mouseLineContainer')\n    .append('line')\n    .attr('class', `mouse-line`)\n    .style('stroke', '#a3a3a4')\n    .style('stroke-width', '1px')\n    .style('opacity', '0')\n    .style('stroke-dasharray', '5')\n    .attr('y1', 0)\n    .attr('y2', graphHeight);\n\n  // Render invisible scatter plot per comparator (for mouseover effect)\n  const scatterPlot = svg.append('g').attr('class', 'scatter-plot-container');\n  chartData.forEach((dataSet, index) => {\n    return scatterPlot\n      .append('g')\n      .attr('class', 'scatter-plot')\n      .selectAll('.dot')\n      .data(dataSet.values)\n      .enter()\n      .append('circle')\n      .attr('r', 4)\n      .attr('cx', d => xScale(moment(d.date).valueOf()))\n      .attr('cy', d => yScale(d.percentChange))\n      .attr('class', d => {\n        const pointIndex = _.findIndex(dataSet.values, d);\n        return `scatter-point point-${pointIndex} ${GraphLineColors[index]}`;\n      })\n      .attr('data-dateId', d => d.date)\n      .style('stroke-width', '1px')\n      .style('fill', '#fff')\n      .style('opacity', '0');\n  });\n\n  // Define Mouse in/out area\n  const mouseArea = svg.append('rect').attr('class', 'mouseAreaRect');\n\n  // Define mouse event handlers\n  const tooltip = d3.select(`#chart-tooltip`);\n  const tooltipValue = d3.select(`#chart-tooltip-value`);\n\n  const mouseOver = () => {\n    d3.select(`.mouse-line`).style('opacity', '1');\n    tooltip.style('visibility', 'visible');\n    showChipValue(true);\n  };\n  const mouseOut = () => {\n    d3.select(`.mouse-line`).style('opacity', '0');\n    d3.selectAll(`.scatter-point`).style('opacity', '0');\n    tooltip.style('visibility', 'hidden');\n    showChipValue(false);\n  };\n  const mouseMove = datapoint => {\n    const detectArea = d3.select('.mouseAreaRect').node();\n    const d3Mouse = d3.mouse(detectArea);\n    const bisect = d3.bisector(i => i.date).left;\n    const xDate = moment(xScale.invert(d3Mouse[0])).format('YYYY-MM-DD');\n    const index = bisect(datapoint.values, xDate);\n    const xDot = d3.select('.point-' + index).attr('cx');\n\n    const dataPoint = chartData[0].values.find(value => value.date === xDate);\n    if (dataPoint) {\n      // move vertical line\n      d3.select(`.mouse-line`).attr('transform', `translate(${xDot}, 0)`);\n\n      // Hide previous/all scatter points, but show new applicable ones\n      d3.selectAll(`.scatter-point`).style('opacity', '0');\n      d3.selectAll(`.scatter-point[data-dateId=\"${xDate}\"]`).style(\n        'opacity',\n        '1'\n      );\n\n      // Set tooltip date value, and position\n      const tooltipDate = moment(xDate).format('MMM DD, YYYY');\n      tooltipValue.html(tooltipDate);\n      const tooltipXPosition = d3Mouse[0] + 55;\n      const tooltipYPosition = d3Mouse[1] + 55;\n      tooltip.style('left', `${tooltipXPosition}px`);\n      tooltip.style('top', `${tooltipYPosition}px`);\n\n      // send percentChange values to display\n      const percentChangeData = chartData.map(comparator => {\n        const findValue = comparator.values.find(value => value.date === xDate);\n        const percentChange = findValue ? findValue.percentChange : null;\n        return {\n          percentChange,\n          id: comparator.id\n        };\n      });\n      if (percentChangeData[0].percentChange !== prevPercentChange) {\n        prevPercentChange = percentChangeData[0].percentChange;\n        setPercentChangeData(percentChangeData);\n      }\n    }\n  };\n\n  // Generate mouse area with event handlers\n  mouseArea\n    .data(chartData)\n    .attr('width', graphWidth)\n    .attr('height', graphHeight)\n    .attr('fill', 'none')\n    .attr('pointer-events', 'all')\n    .on('mouseover', () => mouseOver())\n    .on('mousemove', d => mouseMove(d))\n    .on('mouseout', () => mouseOut());\n};\n\nexport default drawModeledPerformanceGraph;\n"]},"metadata":{},"sourceType":"module"}
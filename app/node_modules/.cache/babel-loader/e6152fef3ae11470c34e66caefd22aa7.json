{"ast":null,"code":"var _jsxFileName = \"/Users/suavestefano/repos/linechart-and-slider/app/src/DisplayChip.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nexport const DisplayChip = props => {\n  const style = {\n    boxShadow: \"\".concat(props.color, \" 4px 0px 0px 0px inset\")\n  };\n  const isPos = props.percentChange > 0 ? '+' : '';\n  const value = Math.round(props.percentChange * 100) / 100;\n  return React.createElement(\"div\", {\n    className: \"displayChip\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"displayChipLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.label), props.showValues ? React.createElement(\"span\", {\n    className: \"displayChipValue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, isPos, value, \"%\") : null);\n};\nexport const mapStateToProps = (store, selfProps) => {\n  const percentChangeValues = store.percentChangeValues;\n  const comparator = percentChangeValues ? percentChangeValues.find(comparator => comparator.id === selfProps.id) : null;\n  const percentChange = comparator ? comparator.percentChange : '--';\n  return {\n    showValues: store.showValuesFlag,\n    percentChange: percentChange\n  };\n};\nexport default connect(mapStateToProps)(DisplayChip);","map":{"version":3,"sources":["/Users/suavestefano/repos/linechart-and-slider/app/src/DisplayChip.js"],"names":["React","connect","DisplayChip","props","style","boxShadow","color","isPos","percentChange","value","Math","round","label","showValues","mapStateToProps","store","selfProps","percentChangeValues","comparator","find","id","showValuesFlag"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAClC,QAAMC,KAAK,GAAG;AACZC,IAAAA,SAAS,YAAKF,KAAK,CAACG,KAAX;AADG,GAAd;AAIA,QAAMC,KAAK,GAAGJ,KAAK,CAACK,aAAN,GAAsB,CAAtB,GAA0B,GAA1B,GAAgC,EAA9C;AACA,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACK,aAAN,GAAsB,GAAjC,IAAwC,GAAtD;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAEJ,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCD,KAAK,CAACS,KAA1C,CADF,EAEGT,KAAK,CAACU,UAAN,GACC;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KADH,EAEGE,KAFH,MADD,GAKG,IAPN,CADF;AAWD,CAnBM;AAqBP,OAAO,MAAMK,eAAe,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;AACnD,QAAMC,mBAAmB,GAAGF,KAAK,CAACE,mBAAlC;AACA,QAAMC,UAAU,GAAGD,mBAAmB,GAClCA,mBAAmB,CAACE,IAApB,CAAyBD,UAAU,IAAIA,UAAU,CAACE,EAAX,KAAkBJ,SAAS,CAACI,EAAnE,CADkC,GAElC,IAFJ;AAGA,QAAMZ,aAAa,GAAGU,UAAU,GAAGA,UAAU,CAACV,aAAd,GAA8B,IAA9D;AACA,SAAO;AACLK,IAAAA,UAAU,EAAEE,KAAK,CAACM,cADb;AAELb,IAAAA,aAAa,EAAEA;AAFV,GAAP;AAID,CAVM;AAYP,eAAeP,OAAO,CAACa,eAAD,CAAP,CAAyBZ,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nexport const DisplayChip = props => {\n  const style = {\n    boxShadow: `${props.color} 4px 0px 0px 0px inset`\n  };\n\n  const isPos = props.percentChange > 0 ? '+' : '';\n  const value = Math.round(props.percentChange * 100) / 100;\n\n  return (\n    <div className=\"displayChip\" style={style}>\n      <span className=\"displayChipLabel\">{props.label}</span>\n      {props.showValues ? (\n        <span className=\"displayChipValue\">\n          {isPos}\n          {value}%\n        </span>\n      ) : null}\n    </div>\n  );\n};\n\nexport const mapStateToProps = (store, selfProps) => {\n  const percentChangeValues = store.percentChangeValues;\n  const comparator = percentChangeValues\n    ? percentChangeValues.find(comparator => comparator.id === selfProps.id)\n    : null;\n  const percentChange = comparator ? comparator.percentChange : '--';\n  return {\n    showValues: store.showValuesFlag,\n    percentChange: percentChange\n  };\n};\n\nexport default connect(mapStateToProps)(DisplayChip);\n"]},"metadata":{},"sourceType":"module"}
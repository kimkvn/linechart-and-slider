{"ast":null,"code":"import React from'react';import{connect}from'react-redux';export var DisplayChip=function DisplayChip(props){var style={boxShadow:\"\".concat(props.color,\" 4px 0px 0px 0px inset\")};var isPos=props.percentChange>0?'+':'';var value=Math.round(props.percentChange*100)/100;return React.createElement(\"div\",{className:\"displayChip\",style:style},React.createElement(\"span\",{className:\"displayChipLabel\"},props.label),props.showValues?React.createElement(\"span\",{className:\"displayChipValue\"},isPos,value,\"%\"):null);};export var mapStateToProps=function mapStateToProps(store,selfProps){var percentChangeValues=store.percentChangeValues;var comparator=percentChangeValues?percentChangeValues.find(function(comparator){return comparator.id===selfProps.id;}):null;var percentChange=comparator?comparator.percentChange:'--';return{showValues:store.showValuesFlag,percentChange:percentChange};};export default connect(mapStateToProps)(DisplayChip);","map":{"version":3,"sources":["/Users/suavestefano/repos/linechart-and-slider/app/src/DisplayChip.js"],"names":["React","connect","DisplayChip","props","style","boxShadow","color","isPos","percentChange","value","Math","round","label","showValues","mapStateToProps","store","selfProps","percentChangeValues","comparator","find","id","showValuesFlag"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,CAClC,GAAMC,CAAAA,KAAK,CAAG,CACZC,SAAS,WAAKF,KAAK,CAACG,KAAX,0BADG,CAAd,CAIA,GAAMC,CAAAA,KAAK,CAAGJ,KAAK,CAACK,aAAN,CAAsB,CAAtB,CAA0B,GAA1B,CAAgC,EAA9C,CACA,GAAMC,CAAAA,KAAK,CAAGC,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACK,aAAN,CAAsB,GAAjC,EAAwC,GAAtD,CAEA,MACE,4BAAK,SAAS,CAAC,aAAf,CAA6B,KAAK,CAAEJ,KAApC,EACE,4BAAM,SAAS,CAAC,kBAAhB,EAAoCD,KAAK,CAACS,KAA1C,CADF,CAEGT,KAAK,CAACU,UAAN,CACC,4BAAM,SAAS,CAAC,kBAAhB,EACGN,KADH,CAEGE,KAFH,KADD,CAKG,IAPN,CADF,CAWD,CAnBM,CAqBP,MAAO,IAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,SAAR,CAAsB,CACnD,GAAMC,CAAAA,mBAAmB,CAAGF,KAAK,CAACE,mBAAlC,CACA,GAAMC,CAAAA,UAAU,CAAGD,mBAAmB,CAClCA,mBAAmB,CAACE,IAApB,CAAyB,SAAAD,UAAU,QAAIA,CAAAA,UAAU,CAACE,EAAX,GAAkBJ,SAAS,CAACI,EAAhC,EAAnC,CADkC,CAElC,IAFJ,CAGA,GAAMZ,CAAAA,aAAa,CAAGU,UAAU,CAAGA,UAAU,CAACV,aAAd,CAA8B,IAA9D,CACA,MAAO,CACLK,UAAU,CAAEE,KAAK,CAACM,cADb,CAELb,aAAa,CAAEA,aAFV,CAAP,CAID,CAVM,CAYP,cAAeP,CAAAA,OAAO,CAACa,eAAD,CAAP,CAAyBZ,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nexport const DisplayChip = props => {\n  const style = {\n    boxShadow: `${props.color} 4px 0px 0px 0px inset`\n  };\n\n  const isPos = props.percentChange > 0 ? '+' : '';\n  const value = Math.round(props.percentChange * 100) / 100;\n\n  return (\n    <div className=\"displayChip\" style={style}>\n      <span className=\"displayChipLabel\">{props.label}</span>\n      {props.showValues ? (\n        <span className=\"displayChipValue\">\n          {isPos}\n          {value}%\n        </span>\n      ) : null}\n    </div>\n  );\n};\n\nexport const mapStateToProps = (store, selfProps) => {\n  const percentChangeValues = store.percentChangeValues;\n  const comparator = percentChangeValues\n    ? percentChangeValues.find(comparator => comparator.id === selfProps.id)\n    : null;\n  const percentChange = comparator ? comparator.percentChange : '--';\n  return {\n    showValues: store.showValuesFlag,\n    percentChange: percentChange\n  };\n};\n\nexport default connect(mapStateToProps)(DisplayChip);\n"]},"metadata":{},"sourceType":"module"}
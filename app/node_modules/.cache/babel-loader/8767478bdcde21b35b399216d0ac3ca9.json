{"ast":null,"code":"import moment from'moment';export var calcPercentChange=function calcPercentChange(base,price){var percentChange=(price/base-1)*100;return percentChange;};export var convertPercentChange=function convertPercentChange(comparator){var priceData=comparator.values;var base=priceData.find(function(dataPoint){return dataPoint.price;});var percentChangeData=priceData.map(function(value){return{date:value.date,price:value.price,percentChange:calcPercentChange(base.price,value.price)};});return{id:comparator.id,key:comparator.key,values:percentChangeData};};// X Axis tick\nexport var generateTicks=function generateTicks(from,to,interval,period){var dateCount=from;var ticks=[moment.utc(dateCount)];while(dateCount.isSameOrBefore(to)){ticks.push(moment.utc(dateCount));dateCount=dateCount.add(interval,period);}ticks.shift();return ticks;};export var buildXTicks=function buildXTicks(from,to){var dateMonthRange=to.diff(from,'month');var xAxisBuild={xTicks:[{}],xTickFormat:''};if(dateMonthRange<=1){xAxisBuild.xTicks=generateTicks(from,to,7,'day');xAxisBuild.xTickFormat='%e';return xAxisBuild;}if(dateMonthRange<6){xAxisBuild.xTicks=generateTicks(from,to,1,'month');xAxisBuild.xTickFormat='%b';return xAxisBuild;}if(dateMonthRange>=6&&dateMonthRange<24){xAxisBuild.xTicks=generateTicks(from,to,2,'month');if(dateMonthRange>=12){xAxisBuild.xTickFormat=\"%b '%y\";}else{xAxisBuild.xTickFormat='%b';}return xAxisBuild;}if(dateMonthRange>=24&&dateMonthRange<60){xAxisBuild.xTicks=generateTicks(from,to,6,'month');xAxisBuild.xTickFormat=\"%b '%y\";return xAxisBuild;}xAxisBuild.xTicks=generateTicks(from,to,1,'year');xAxisBuild.xTickFormat='%Y';return xAxisBuild;};","map":{"version":3,"sources":["/Users/suavestefano/repos/linechart-and-slider/app/src/LineGraph/line-graph.transform.js"],"names":["moment","calcPercentChange","base","price","percentChange","convertPercentChange","comparator","priceData","values","find","dataPoint","percentChangeData","map","value","date","id","key","generateTicks","from","to","interval","period","dateCount","ticks","utc","isSameOrBefore","push","add","shift","buildXTicks","dateMonthRange","diff","xAxisBuild","xTicks","xTickFormat"],"mappings":"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","sourcesContent":["import moment from 'moment';\n\nexport const calcPercentChange = (base, price) => {\n  const percentChange = (price / base - 1) * 100;\n  return percentChange;\n};\n\nexport const convertPercentChange = comparator => {\n  const priceData = comparator.values;\n  const base = priceData.find(dataPoint => dataPoint.price);\n  const percentChangeData = priceData.map(value => {\n    return {\n      date: value.date,\n      price: value.price,\n      percentChange: calcPercentChange(base.price, value.price)\n    };\n  });\n  return {\n    id: comparator.id,\n    key: comparator.key,\n    values: percentChangeData\n  };\n};\n\n// X Axis tick\nexport const generateTicks = (from, to, interval, period) => {\n  let dateCount = from;\n  const ticks = [moment.utc(dateCount)];\n  while (dateCount.isSameOrBefore(to)) {\n    ticks.push(moment.utc(dateCount));\n    dateCount = dateCount.add(interval, period);\n  }\n  ticks.shift();\n  return ticks;\n};\n\nexport const buildXTicks = (from, to) => {\n  const dateMonthRange = to.diff(from, 'month');\n  const xAxisBuild = {\n    xTicks: [{}],\n    xTickFormat: ''\n  };\n  if (dateMonthRange <= 1) {\n    xAxisBuild.xTicks = generateTicks(from, to, 7, 'day');\n    xAxisBuild.xTickFormat = '%e';\n    return xAxisBuild;\n  }\n  if (dateMonthRange < 6) {\n    xAxisBuild.xTicks = generateTicks(from, to, 1, 'month');\n    xAxisBuild.xTickFormat = '%b';\n    return xAxisBuild;\n  }\n  if (dateMonthRange >= 6 && dateMonthRange < 24) {\n    xAxisBuild.xTicks = generateTicks(from, to, 2, 'month');\n    if (dateMonthRange >= 12) {\n      xAxisBuild.xTickFormat = \"%b '%y\";\n    } else {\n      xAxisBuild.xTickFormat = '%b';\n    }\n    return xAxisBuild;\n  }\n  if (dateMonthRange >= 24 && dateMonthRange < 60) {\n    xAxisBuild.xTicks = generateTicks(from, to, 6, 'month');\n    xAxisBuild.xTickFormat = \"%b '%y\";\n    return xAxisBuild;\n  }\n  xAxisBuild.xTicks = generateTicks(from, to, 1, 'year');\n  xAxisBuild.xTickFormat = '%Y';\n  return xAxisBuild;\n};\n"]},"metadata":{},"sourceType":"module"}
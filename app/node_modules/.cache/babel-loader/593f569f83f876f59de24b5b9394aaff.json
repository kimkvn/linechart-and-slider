{"ast":null,"code":"var _jsxFileName = \"/Users/suavestefano/repos/linechart-and-slider/app/src/LineGraph/LineGraph.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './line-graph.scss';\nimport data from '../mockData.js';\nimport drawModeledPerformanceGraph from './line-graph.generator';\nimport { showValues, setPercentChangeValues } from '../actions';\n\nclass LineGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.showChipValue = this.showChipValue.bind(this);\n    this.setPercentChangeValues = this.setPercentChangeValues.bind(this);\n  }\n\n  showChipValue(flag) {\n    this.props.showChipValue(flag);\n  }\n\n  setPercentChangeValues(percentChangeData) {\n    this.props.setPercentChangeValues(percentChangeData);\n  }\n\n  componentDidMount() {\n    drawModeledPerformanceGraph(data, '2018-12-17', '2019-12-16', this.showChipValue, this.setPercentChangeValues);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"svg\", {\n      id: \"isa-modeled-performance-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"chart-tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"chart-tooltip-value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    showChipValue: flag => dispatch(showValues(flag)),\n    setPercentChangeValues: data => dispatch(setPercentChangeValues(data))\n  };\n};\nexport default connect(null, mapDispatchToProps)(LineGraph);","map":{"version":3,"sources":["/Users/suavestefano/repos/linechart-and-slider/app/src/LineGraph/LineGraph.js"],"names":["React","connect","data","drawModeledPerformanceGraph","showValues","setPercentChangeValues","LineGraph","Component","constructor","props","showChipValue","bind","flag","percentChangeData","componentDidMount","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,mBAAP;AAEA,OAAOC,IAAP,MAAiB,gBAAjB;AAEA,OAAOC,2BAAP,MAAwC,wBAAxC;AACA,SAASC,UAAT,EAAqBC,sBAArB,QAAmD,YAAnD;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKN,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BM,IAA5B,CAAiC,IAAjC,CAA9B;AACD;;AAEDD,EAAAA,aAAa,CAACE,IAAD,EAAO;AAClB,SAAKH,KAAL,CAAWC,aAAX,CAAyBE,IAAzB;AACD;;AAEDP,EAAAA,sBAAsB,CAACQ,iBAAD,EAAoB;AACxC,SAAKJ,KAAL,CAAWJ,sBAAX,CAAkCQ,iBAAlC;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBX,IAAAA,2BAA2B,CACzBD,IADyB,EAEzB,YAFyB,EAGzB,YAHyB,EAIzB,KAAKQ,aAJoB,EAKzB,KAAKL,sBALoB,CAA3B;AAOD;;AAEDU,EAAAA,MAAM,GAAG;AACP,WACE,0CACE;AAAK,MAAA,EAAE,EAAC,+BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,EAAE,EAAC,qBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF;AAQD;;AAlCqC;;AAqCxC,OAAO,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AAC5C,SAAO;AACLP,IAAAA,aAAa,EAAEE,IAAI,IAAIK,QAAQ,CAACb,UAAU,CAACQ,IAAD,CAAX,CAD1B;AAELP,IAAAA,sBAAsB,EAAEH,IAAI,IAAIe,QAAQ,CAACZ,sBAAsB,CAACH,IAAD,CAAvB;AAFnC,GAAP;AAID,CALM;AAOP,eAAeD,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCV,SAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport './line-graph.scss';\n\nimport data from '../mockData.js';\n\nimport drawModeledPerformanceGraph from './line-graph.generator';\nimport { showValues, setPercentChangeValues } from '../actions';\n\nclass LineGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.showChipValue = this.showChipValue.bind(this);\n    this.setPercentChangeValues = this.setPercentChangeValues.bind(this);\n  }\n\n  showChipValue(flag) {\n    this.props.showChipValue(flag);\n  }\n\n  setPercentChangeValues(percentChangeData) {\n    this.props.setPercentChangeValues(percentChangeData);\n  }\n\n  componentDidMount() {\n    drawModeledPerformanceGraph(\n      data,\n      '2018-12-17',\n      '2019-12-16',\n      this.showChipValue,\n      this.setPercentChangeValues\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <svg id=\"isa-modeled-performance-chart\"></svg>\n        <div id=\"chart-tooltip\">\n          <span id=\"chart-tooltip-value\"></span>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    showChipValue: flag => dispatch(showValues(flag)),\n    setPercentChangeValues: data => dispatch(setPercentChangeValues(data))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LineGraph);\n"]},"metadata":{},"sourceType":"module"}